language: python
python: 3.9
dist: jammy

before_script:
  - pip install gen3utils --upgrade

script:
  # validate manifest.json, etlMapping.yaml and gitops.json:
  - |
    # for push builds, TRAVIS_BRANCH is the current branch name; for PR
    # builds, it's the name of the branch targeted by the PR.
    # We need the latter, which we can't get for push builds, so the tests
    # only run properly on PRs.
    changed_files=$(git diff --name-only HEAD..$TRAVIS_BRANCH)
    envs=()
    for file in $changed_files; do
      envs+=($(echo "$file" | cut -d "/" -f1))
    done

    # remove duplicates
    envs=($(printf "%s\n" "${envs[@]}" | sort -u)); echo  "${uniq[@]}"
    echo "Updated: ${envs[@]}"

    for dir in "${envs[@]}"; do
      echo "    Validating $dir"
      man=$dir/manifest.json; etl=$dir/etlMapping.yaml; ptlcfg=$dir/portal/gitops.json;

      # validate manifest.json
      if [ -f $man ]; then
        gen3utils validate-manifest $man || exit 1
      fi

      # validate ETL mapping
      if [ -f $man ] && [ -f $etl ]; then
        gen3utils validate-etl-mapping $etl $man || exit 1
      fi

      # validate portal configuration
      if [ -f $man ] && [ -f $etl ] && [ -f $ptlcfg ]; then
        if [[ $TRAVIS_PULL_REQUEST != false ]]; then
          gen3utils validate-portal-config $etl $man $ptlcfg uc-cdis/gitops-qa $TRAVIS_PULL_REQUEST || exit 1
        else
          gen3utils validate-portal-config $etl $man $ptlcfg || exit 1
        fi
      fi

    done

  # comment on PRs with relevant deployment changes:
  - |
    if [ -z $GH_TOKEN ]; then echo "there is no GH_TOKEN"; else echo "GH_TOKEN has been defined"; fi
    if [ -z $GITHUB_TOKEN ]; then echo "there is no GITHUB_TOKEN"; else echo "GITHUB_TOKEN has been defined"; fi
    if [[ $TRAVIS_PULL_REQUEST != false ]]; then
      gen3utils post-deployment-changes uc-cdis/gitops-qa $TRAVIS_PULL_REQUEST
    fi

env:
  global:
    # GITHUB_TOKEN
    secure: "B4rHuBKtUfABjTD4YoNlc5w782tN2Hn0i1IymmfS69xMJmwreLx9xkx7yVw2AQ0dMu7kP30yrSO75CiWEGUTVqh9xss026Kd/pJrNpSWUdsMc4YEsTivKCCeB43mFslLhBbg2iDunrCLQk0rtbo+/+jornXIT3yesQC5eUWkXdvxKfA2PeCv51T3YLDAjrNSDH2VVWdmOf1J+zYvEPFrBWEfotKAh/FdW5Dj0KBj2T92hl4Pxf30pE6mhbpU3gV889NTBElhaHUhY5bCnDeCbud6eZgN9wZ4/vk4hptPyckeqN3Ou8CitOJ6VrsLz81KpMBe/ZnL8uxJEmalrT1LoIl4v9gmQFwi4KdwYL5bbUi63Sf9egNMAt+19jR/gogmavQeEHlgiSnjN2sCpaU1ayPqJNkbCrf0VfDfEPtZAzZGlO5GjLx1duIo2MClA+SKh1Zkn2fqYrxcmz524QLBMcd7TITfk/2KSQC6bq08q4cKKFszZdy7t8G0myvc+Bk6IxqiKxkjDAMpG3aScIKrZB4YQQ/Pg2TqHr7PNz00EueGh1mkgPoPYToMYA/AvooKQEl4j8UIxtK62jNs7uXStH0VhGlWCUI33jhJjSuiyANz2wJ1be74h4Q4PQM/9Brd95cR1wobEjW7TIDq7xq/saV9cFapuirLpTgW1RnO118="

notifications:
  slack:
    secure: ihz7ERwE43FaXiuKdpzz8CIoK7lcOqm2mblwDs+b2yPiCQeJ2NccPavfxnfa156QicL9Hz2p2biGPyjIhEg/p449+ylY64L3LJFPrOdmbQ6ENPZujrL/N0blyGOkj0gs46Ryq7d1hv/irt6RUkMlLe/3O2ZeF+mcCUO7OXbeR4MXSaKaHaq3hKgzZlv6ZFcMxnA0SDZwepFKq0vG+DLvYTTT0TxEhxKHS56q8jtkKSTQ+++mfHeeeM/GxiAFUJr/WNA03vAaSDhlxZrwzMlJoygGTxXjSOhvSv8QzSWfqqeSTekIxoC6baPGRwB/l+IK7UW6dJCUdpV1Nxv+3qo7sPRnRvvHn7wVrG6ns+wHBQ/BspL+T+U5TwVwZ2c6a1XwsOWrxIxbn6Tk3xqr7GlM697cNqy5jdc0kmgyhRGzfAbcbscZi+76sMj3Mc3J8laUR1XBIi6J5wq/X7aj0erIaUsH3jFEiU+O9rlrPfAMpObf3cBiVX7MDhCTnWOtYagGEGrQC92YDsgy02l2e2wCj6mdhN7cS+zT03G7DCgmG6eSNwCb+HWktHBpgUWP6WBbkcJlwAukeWaEWExeAO8Iz3/rnt+GCZdoT7TCBUM+b9h9W4JmP8WzKGXQXVN7tHNkVfH+Ntul7CVDyw7iIngHVDt4o0xyZSK8iZa/fXqRNNw=
    on_pull_requests: false
    on_success: never
    on_failure: always
